{
  "posts": [
    {
      "id": "1",
      "title": "a title",
      "views": 100
    },
    {
      "id": "2",
      "title": "another title",
      "views": 200
    },
    {
      "id": "3",
      "title": "another title 2",
      "views": 200
    },
    {
      "id": "4",
      "title": "another title 3",
      "views": 200
    }
  ],
  "articles": [
    {
      "id": "1",
      "title": "JavaScript news",
      "subtitle": "Что нового в JavaScript в 2024?",
      "img": "https://cdn.eventil.com/uploads/event/header_image/291302/highres_436702483.jpg",
      "views": 1020,
      "createdAt": "13.01.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "new ModuleFederationPlugin({\n    name: 'react-app',\n    library: { type: 'global', name: 'react-app' },\n    filename: 'remoteEntry.js',\n    exposes: {\n        angularIntegration: './src/angularIntegration.ts',\n    },\n}),"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сложность архитектуры: Управление микрофронтендами влечет за собой более сложную архитектуру с множеством точек соприкосновения, что увеличивает риск возникновения ошибок и повышает стоимость тестирования.",
            "Высокий порог входа: Разработка и поддержка микрофронтендной архитектуры требуют глубокого понимания специфических технологий и подходов, а также поиска специалистов, желающих и способных работать в такой среде.",
            "Вопросы производительности: Интеграция множества независимых приложений может привести к увеличению общего объема загружаемого кода и, как следствие, к снижению производительности, особенно если одни и те же библиотеки (например, Lodash) используются в разных приложениях. Однако, использование таких механизмов, как Module Federation, может помочь решить эту проблему, позволяя делиться зависимостями между микрофронтендами, тем самым уменьшая общий объем загружаемого кода."
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/111/81b/7fd/11181b7fdace85437dd164a9af39b786.jpeg",
          "title": "Рисунок 1 - Скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "new ModuleFederationPlugin({\n    name: 'react-app',\n    library: { type: 'global', name: 'react-app' },\n    filename: 'remoteEntry.js',\n    exposes: {\n        angularIntegration: './src/angularIntegration.ts',\n    },\n}),"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сложность архитектуры: Управление микрофронтендами влечет за собой более сложную архитектуру с множеством точек соприкосновения, что увеличивает риск возникновения ошибок и повышает стоимость тестирования.",
            "Вопросы производительности: Интеграция множества независимых приложений может привести к увеличению общего объема загружаемого кода и, как следствие, к снижению производительности, особенно если одни и те же библиотеки (например, Lodash) используются в разных приложениях. Однако, использование таких механизмов, как Module Federation, может помочь решить эту проблему, позволяя делиться зависимостями между микрофронтендами, тем самым уменьшая общий объем загружаемого кода."
          ]
        },
        {
          "id": "7",
          "type": "CODE",
          "code": "new ModuleFederationPlugin({\n    name: 'react-app',\n    library: { type: 'global', name: 'react-app' },\n    filename: 'remoteEntry.js',\n    exposes: {\n        angularIntegration: './src/angularIntegration.ts',\n    },\n}),"
        },
        {
          "id": "8",
          "type": "IMAGE",
          "src": "https://habrastorage.org/r/w1560/getpro/habr/upload_files/111/81b/7fd/11181b7fdace85437dd164a9af39b786.jpeg",
          "title": "Рисунок 1 - Скриншот сайта"
        }
      ]
    },
    {
      "id": "2",
      "title": "Popular python!",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 10220,
      "createdAt": "18.04.2024",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "Ruby в деле.",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 300420,
      "createdAt": "13.06.2018",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "Typescript здесь!",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 43220,
      "createdAt": "10.04.2022",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "Kotlin",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 67720,
      "createdAt": "16.01.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Java backend!",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 102920,
      "createdAt": "09.04.2020",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "C# OOP programming",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 87720,
      "createdAt": "22.07.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "Python backend!",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 30000,
      "createdAt": "01.04.2021",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "Popular languages",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 8220,
      "createdAt": "13.09.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "10",
      "title": "C++!",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 102720,
      "createdAt": "18.02.2024",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "11",
      "title": "Language for everything",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 11020,
      "createdAt": "30.01.2021",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "12",
      "title": "Golang!",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 10220,
      "createdAt": "18.04.2024",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "13",
      "title": "Which programming language to choose for backend?",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 5620,
      "createdAt": "13.01.2025",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "14",
      "title": "Backend for frontend",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 87560,
      "createdAt": "18.04.2021",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "15",
      "title": "Jango освобождённый!",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 102000,
      "createdAt": "13.01.2026",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "16",
      "title": "React or Vue?",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 2020,
      "createdAt": "18.010.2025",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "17",
      "title": "All about http protocol",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 10230,
      "createdAt": "13.01.2022",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "18",
      "title": "Computer networks",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 76220,
      "createdAt": "18.02.2024",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "19",
      "title": "Web sockets",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 1520,
      "createdAt": "13.01.2020",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "20",
      "title": "React native",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 10220,
      "createdAt": "18.04.2021",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "21",
      "title": "Swift",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 16720,
      "createdAt": "13.11.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "22",
      "title": "Accounting for programmers",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 880220,
      "createdAt": "11.04.2024",
      "userId": "2",
      "type": [
        "IT",
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "23",
      "title": "SSR. Is it really so good?",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 23020,
      "createdAt": "16.01.2024",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "24",
      "title": "One day in the life of software ingeneer.",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 177220,
      "createdAt": "18.04.2022",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "25",
      "title": "Economics",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://cdo.smolgu.ru/pluginfile.php/367852/course/overviewfiles/%D0%AD%D0%BA%D0%BE%D0%BD%D0%BE%D0%BC%D0%B8%D0%BA%D0%B0.jpg",
      "views": 10299,
      "createdAt": "17.01.2020",
      "userId": "1",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "26",
      "title": "Politic situation in the world",
      "subtitle": "Никогда не теряет своих позиций в рейтенге.",
      "img": "https://allisready.com/wp-content/uploads/2023/02/python-programlama-dili-nedir-ve-kullanim-alanlari-scaled.jpeg",
      "views": 83220,
      "createdAt": "18.07.2024",
      "userId": "2",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "27",
      "title": "Relocation",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://i2.wp.com/miro.medium.com/1*K2SLalne3k7d1m8oB9xN-Q.jpeg",
      "views": 7020,
      "createdAt": "19.01.2019",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "28",
      "title": "Инфляция",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://newvzglyad.ru/wp-content/uploads/2022/11/main-inflation-graph-1536x864.jpg",
      "views": 7020,
      "createdAt": "19.01.2019",
      "userId": "1",
      "type": [
        "ECONOMICS"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "29",
      "title": "Биология",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://gas-kvas.com/uploads/posts/2023-01/1674020712_gas-kvas-com-p-risunok-na-temu-biologiya-2.jpg",
      "views": 7020,
      "createdAt": "19.01.2019",
      "userId": "1",
      "type": [
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    },
    {
      "id": "30",
      "title": "Химия",
      "subtitle": "Использование ruby для написания js loader'ов",
      "img": "https://trikky.ru/wp-content/blogs.dir/1/files/2022/08/14/1612650818-121-p-zelenii-fon-dly.jpg",
      "views": 7020,
      "createdAt": "19.01.2019",
      "userId": "1",
      "type": [
        "SCIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Сегодня я хочу поделиться не столько пошаговым руководством, сколько представлением одной интересной идеи, которая может помочь разработчикам, столкнувшимся с задачей интеграции приложений на Angular и React. Мой фокус сегодня — на использовании Module Federation для решения этой проблемы. Хотя это и не может считаться абсолютно идеальным решением, оно тем не менее работает и может стать тем самым толчком для кого-то, кто сейчас ищет способы объединения этих двух миров.",
            "Однако, концепция \"микрофронтендов\" предполагает существенное изменение этой парадигмы. Суть микрофронтендного подхода заключается в том, что в рамках одного приложения запускаются несколько фронтенд проектов (или модулей), которые между собой слабо связаны. Это означает, что каждый из этих микрофронтендов может быть разработан, протестирован, собран и развернут независимо от остальных, при этом все они совместно формируют единое приложение."
          ]
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "a comment about post 1",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "a comment about post 2",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "3",
      "text": "a comment about post 3",
      "articleId": "1",
      "userId": "1"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "dcfzczxcxz",
      "id": "-O8JZm-"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "dcfzczxcxz4534534543543",
      "id": "2CkHybY"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "dsf21",
      "id": "CWb9lpo"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "my new comment!",
      "id": "YvA0cR9"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "one more guys!!!",
      "id": "KUzPm2I"
    },
    {
      "articleId": "1",
      "userId": "2",
      "text": "hello, world!",
      "id": "uRrybLP"
    },
    {
      "articleId": "3",
      "userId": "1",
      "text": "That's interesting!",
      "id": "lvvqfx8"
    },
    {
      "articleId": "2",
      "userId": "1",
      "text": "Go go python!!!",
      "id": "CI6Z-g9"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "This is my article!",
      "id": "zeW8Wgj"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "fdgfdgdf",
      "id": "RA_xYi-"
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "123",
      "role": "ADMIN",
      "avatar": "https://wallpapers.com/images/hd/cool-neon-hoodie-profile-picture-vt4w54fxrvenydvu.jpg"
    },
    {
      "id": "2",
      "username": "user",
      "password": "123",
      "role": "USER",
      "avatar": "https://www.english-language.ru/assets/images/articles/programmer.jpg"
    }
  ],
  "profile": [
    {
      "id": "1",
      "first": "Jack",
      "lastname": "Blackson",
      "age": 33,
      "currency": "RUB",
      "country": "Russia",
      "city": "Moscow",
      "username": "admin",
      "avatar": "https://wallpapers.com/images/hd/cool-neon-hoodie-profile-picture-vt4w54fxrvenydvu.jpg"
    },
    {
      "id": "2",
      "first": "Vasyan",
      "lastname": "Shpick",
      "age": 26,
      "currency": "USD",
      "country": "Belarus",
      "city": "Minsk",
      "username": "lodka",
      "avatar": "https://www.english-language.ru/assets/images/articles/programmer.jpg"
    }
  ]
}